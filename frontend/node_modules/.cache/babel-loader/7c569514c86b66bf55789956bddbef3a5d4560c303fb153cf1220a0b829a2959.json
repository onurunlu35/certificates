{"ast":null,"code":"var _jsxFileName = \"/Users/onurunlu/Desktop/claude/ship-cert-system/frontend/src/components/CertificateTable.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from \"./ui/table\";\nimport { Button } from \"./ui/button\";\nimport { FileIcon, Edit } from \"lucide-react\";\nimport { Dialog, DialogContent, DialogHeader, DialogTitle } from \"./ui/dialog\";\nimport CertificateForm from './CertificateForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = 'http://localhost:5001/api';\n\n// Axios için interceptor oluşturalım\naxios.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\nconst CertificateTable = () => {\n  _s();\n  const [certificates, setCertificates] = useState([]);\n  const [editingCertificate, setEditingCertificate] = useState(null);\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    // Token yoksa kullanıcıyı login sayfasına yönlendir\n    const token = localStorage.getItem('token');\n    if (!token) {\n      window.location.href = '/login';\n      return;\n    }\n    fetchCertificates();\n  }, []);\n  const fetchCertificates = async () => {\n    try {\n      console.log('Fetching certificates...');\n      const response = await axios.get(`${API_URL}/certificates`);\n      console.log('Received certificates:', response.data);\n      setCertificates(response.data);\n    } catch (error) {\n      var _error$response;\n      console.error('Error fetching certificates:', error);\n      if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n        // Token geçersizse kullanıcıyı login sayfasına yönlendir\n        localStorage.removeItem('token');\n        window.location.href = '/login';\n      }\n      setError(error.message);\n    }\n  };\n  const handleEdit = certificate => {\n    setEditingCertificate(certificate);\n    setIsDialogOpen(true);\n  };\n  const handleFormClose = () => {\n    setEditingCertificate(null);\n    setIsDialogOpen(false);\n    fetchCertificates();\n  };\n\n  // Geri kalan kod aynı...\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"space-y-4\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n_s(CertificateTable, \"ae6ub+cBrxkffkyZl+kicy0Km+U=\");\n_c = CertificateTable;\nexport default CertificateTable;\nvar _c;\n$RefreshReg$(_c, \"CertificateTable\");","map":{"version":3,"names":["React","useState","useEffect","axios","Table","TableBody","TableCell","TableHead","TableHeader","TableRow","Button","FileIcon","Edit","Dialog","DialogContent","DialogHeader","DialogTitle","CertificateForm","jsxDEV","_jsxDEV","API_URL","interceptors","request","use","config","token","localStorage","getItem","headers","Authorization","error","Promise","reject","CertificateTable","_s","certificates","setCertificates","editingCertificate","setEditingCertificate","isDialogOpen","setIsDialogOpen","setError","window","location","href","fetchCertificates","console","log","response","get","data","_error$response","status","removeItem","message","handleEdit","certificate","handleFormClose","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/onurunlu/Desktop/claude/ship-cert-system/frontend/src/components/CertificateTable.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from \"./ui/table\";\nimport { Button } from \"./ui/button\";\nimport { FileIcon, Edit } from \"lucide-react\";\nimport { Dialog, DialogContent, DialogHeader, DialogTitle } from \"./ui/dialog\";\nimport CertificateForm from './CertificateForm';\n\nconst API_URL = 'http://localhost:5001/api';\n\n// Axios için interceptor oluşturalım\naxios.interceptors.request.use(\n  config => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n  },\n  error => {\n    return Promise.reject(error);\n  }\n);\n\nconst CertificateTable = () => {\n  const [certificates, setCertificates] = useState([]);\n  const [editingCertificate, setEditingCertificate] = useState(null);\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    // Token yoksa kullanıcıyı login sayfasına yönlendir\n    const token = localStorage.getItem('token');\n    if (!token) {\n      window.location.href = '/login';\n      return;\n    }\n    fetchCertificates();\n  }, []);\n\n  const fetchCertificates = async () => {\n    try {\n      console.log('Fetching certificates...');\n      const response = await axios.get(`${API_URL}/certificates`);\n      console.log('Received certificates:', response.data);\n      setCertificates(response.data);\n    } catch (error) {\n      console.error('Error fetching certificates:', error);\n      if (error.response?.status === 401) {\n        // Token geçersizse kullanıcıyı login sayfasına yönlendir\n        localStorage.removeItem('token');\n        window.location.href = '/login';\n      }\n      setError(error.message);\n    }\n  };\n\n  const handleEdit = (certificate) => {\n    setEditingCertificate(certificate);\n    setIsDialogOpen(true);\n  };\n\n  const handleFormClose = () => {\n    setEditingCertificate(null);\n    setIsDialogOpen(false);\n    fetchCertificates();\n  };\n\n  // Geri kalan kod aynı...\n\n  return (\n    <div className=\"space-y-4\">\n      {/* ... önceki kodlar aynı ... */}\n    </div>\n  );\n};\n\nexport default CertificateTable;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}