{"ast":null,"code":"var _jsxFileName = \"/Users/onurunlu/Desktop/claude/ship-cert-system/frontend/src/components/TagExtractor.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { Button } from \"./ui/button\";\nimport { Input } from \"./ui/input\";\nimport { Card } from \"./ui/card\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = 'http://localhost:5001/api';\nconst TagExtractor = () => {\n  _s();\n  const [tag, setTag] = useState('');\n  const [result, setResult] = useState(null);\n  const [error, setError] = useState(null);\n  const handleExtract = async () => {\n    try {\n      const response = await axios.get(`${API_URL}/certificates/public`);\n      const certificates = response.data;\n\n      // Tüm sertifikaları tara ve etiket değerini bul\n      let found = false;\n      for (const cert of certificates) {\n        // Tüm tag alanlarını kontrol et\n        if (cert.issuer_tag === tag) {\n          setResult({\n            value: cert.issuer,\n            type: cert.type\n          });\n          found = true;\n          break;\n        }\n        if (cert.at_location_tag === tag) {\n          setResult({\n            value: cert.at_location,\n            type: cert.type\n          });\n          found = true;\n          break;\n        }\n        if (cert.on_date_tag === tag) {\n          setResult({\n            value: cert.on_date ? new Date(cert.on_date).toLocaleDateString('en-GB') : '-',\n            type: cert.type\n          });\n          found = true;\n          break;\n        }\n        if (cert.last_annual_tag === tag) {\n          setResult({\n            value: cert.last_annual ? new Date(cert.last_annual).toLocaleDateString('en-GB') : '-',\n            type: cert.type\n          });\n          found = true;\n          break;\n        }\n        if (cert.expiry_tag === tag) {\n          setResult({\n            value: cert.expiry_date ? new Date(cert.expiry_date).toLocaleDateString('en-GB') : '-',\n            type: cert.type\n          });\n          found = true;\n          break;\n        }\n        if (cert.certificate_no_tag === tag) {\n          setResult({\n            value: cert.certificate_no || '-',\n            type: cert.type\n          });\n          found = true;\n          break;\n        }\n      }\n      if (!found) {\n        setError('Tag not found');\n        setResult(null);\n      } else {\n        setError(null);\n      }\n    } catch (error) {\n      console.error('Error fetching data:', error);\n      setError('Error fetching data');\n      setResult(null);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-2xl mx-auto\",\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: \"p-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-xl font-semibold mb-6\",\n        children: \"Tag Extractor\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"space-y-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex space-x-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex-1\",\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              type: \"text\",\n              value: tag,\n              onChange: e => setTag(e.target.value),\n              placeholder: \"Enter tag (e.g., c11, c23)\",\n              className: \"w-full\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleExtract,\n            children: \"Extract\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-4 bg-red-50 text-red-600 rounded\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this), result && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-4 bg-green-50 rounded\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"font-medium\",\n            children: [\"Found in: \", result.type]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-2\",\n            children: [\"Value: \", result.value]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n_s(TagExtractor, \"FxnqDPgVa8yNYo5Fl4Yc43lSoc8=\");\n_c = TagExtractor;\nexport default TagExtractor;\nvar _c;\n$RefreshReg$(_c, \"TagExtractor\");","map":{"version":3,"names":["React","useState","axios","Button","Input","Card","jsxDEV","_jsxDEV","API_URL","TagExtractor","_s","tag","setTag","result","setResult","error","setError","handleExtract","response","get","certificates","data","found","cert","issuer_tag","value","issuer","type","at_location_tag","at_location","on_date_tag","on_date","Date","toLocaleDateString","last_annual_tag","last_annual","expiry_tag","expiry_date","certificate_no_tag","certificate_no","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["/Users/onurunlu/Desktop/claude/ship-cert-system/frontend/src/components/TagExtractor.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport { Button } from \"./ui/button\";\nimport { Input } from \"./ui/input\";\nimport { Card } from \"./ui/card\";\n\nconst API_URL = 'http://localhost:5001/api';\n\nconst TagExtractor = () => {\n  const [tag, setTag] = useState('');\n  const [result, setResult] = useState(null);\n  const [error, setError] = useState(null);\n\n  const handleExtract = async () => {\n    try {\n      const response = await axios.get(`${API_URL}/certificates/public`);\n      const certificates = response.data;\n\n      // Tüm sertifikaları tara ve etiket değerini bul\n      let found = false;\n      for (const cert of certificates) {\n        // Tüm tag alanlarını kontrol et\n        if (cert.issuer_tag === tag) {\n          setResult({ value: cert.issuer, type: cert.type });\n          found = true;\n          break;\n        }\n        if (cert.at_location_tag === tag) {\n          setResult({ value: cert.at_location, type: cert.type });\n          found = true;\n          break;\n        }\n        if (cert.on_date_tag === tag) {\n          setResult({ value: cert.on_date ? new Date(cert.on_date).toLocaleDateString('en-GB') : '-', type: cert.type });\n          found = true;\n          break;\n        }\n        if (cert.last_annual_tag === tag) {\n          setResult({ value: cert.last_annual ? new Date(cert.last_annual).toLocaleDateString('en-GB') : '-', type: cert.type });\n          found = true;\n          break;\n        }\n        if (cert.expiry_tag === tag) {\n          setResult({ value: cert.expiry_date ? new Date(cert.expiry_date).toLocaleDateString('en-GB') : '-', type: cert.type });\n          found = true;\n          break;\n        }\n        if (cert.certificate_no_tag === tag) {\n          setResult({ value: cert.certificate_no || '-', type: cert.type });\n          found = true;\n          break;\n        }\n      }\n\n      if (!found) {\n        setError('Tag not found');\n        setResult(null);\n      } else {\n        setError(null);\n      }\n\n    } catch (error) {\n      console.error('Error fetching data:', error);\n      setError('Error fetching data');\n      setResult(null);\n    }\n  };\n\n  return (\n    <div className=\"max-w-2xl mx-auto\">\n      <Card className=\"p-6\">\n        <h2 className=\"text-xl font-semibold mb-6\">Tag Extractor</h2>\n        \n        <div className=\"space-y-6\">\n          {/* Input Area */}\n          <div className=\"flex space-x-4\">\n            <div className=\"flex-1\">\n              <Input\n                type=\"text\"\n                value={tag}\n                onChange={(e) => setTag(e.target.value)}\n                placeholder=\"Enter tag (e.g., c11, c23)\"\n                className=\"w-full\"\n              />\n            </div>\n            <Button onClick={handleExtract}>\n              Extract\n            </Button>\n          </div>\n\n          {/* Result Area */}\n          {error && (\n            <div className=\"p-4 bg-red-50 text-red-600 rounded\">\n              {error}\n            </div>\n          )}\n          \n          {result && (\n            <div className=\"p-4 bg-green-50 rounded\">\n              <div className=\"font-medium\">Found in: {result.type}</div>\n              <div className=\"mt-2\">Value: {result.value}</div>\n            </div>\n          )}\n        </div>\n      </Card>\n    </div>\n  );\n};\n\nexport default TagExtractor;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}